{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-author/add-author.component.css","webpack:///./src/app/add-author/add-author.component.html","webpack:///./src/app/add-author/add-author.component.ts","webpack:///./src/app/add-quote/add-quote.component.css","webpack:///./src/app/add-quote/add-quote.component.html","webpack:///./src/app/add-quote/add-quote.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/author-quotes/author-quotes.component.css","webpack:///./src/app/author-quotes/author-quotes.component.html","webpack:///./src/app/author-quotes/author-quotes.component.ts","webpack:///./src/app/authors/authors.component.css","webpack:///./src/app/authors/authors.component.html","webpack:///./src/app/authors/authors.component.ts","webpack:///./src/app/edit-author/edit-author.component.css","webpack:///./src/app/edit-author/edit-author.component.html","webpack:///./src/app/edit-author/edit-author.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"form{\\r\\n  margin: 20px, 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <button class=\\\"btn btn-lg btn-link\\\" routerLink='/'>Home</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3>Add a new quotable author:</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"border border-dark col-sm-9\\\"><br>\\n        <form (submit)=\\\"createAuthor()\\\">\\n          <h3>Name: </h3>\\n          <input class=\\\"form-control col-sm-10\\\" type=\\\"text\\\" required minlength=\\\"4\\\" name=\\\"newauthor.name\\\" [(ngModel)]=\\\"newauthor.name\\\"><br>\\n          <button class=\\\"col-4 btn btn-primary btn-lg\\\" routerLink=\\\"/\\\">Cancel</button>\\n          <button class=\\\"col-4 btn btn-primary btn-lg\\\" type=\\\"submit\\\">Submit</button>\\n        </form>\\n        <br>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-add-author',\n  templateUrl: './add-author.component.html',\n  styleUrls: ['./add-author.component.css']\n})\nexport class AddAuthorComponent implements OnInit {\n  newauthor = {name: \"\", quotes: []};\n  errors: any;\n  constructor(\n    private _httpService: HttpService,\n    private _router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n  createAuthor(){\n    console.log(this.newauthor);\n    let observable = this._httpService.createAuthor(this.newauthor);\n    observable.subscribe(data=>{\n      console.log(\"DataCreate:\", data);\n      console.log(\"ERROR\", data['error']);\n      console.log(\"Create Message\", data['message']);\n    })\n    this.redirectHome();\n  }\n  redirectHome(){\n    this._router.navigate(['/']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"author\\\" class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <button class=\\\"btn btn-link\\\" routerLink='/'>Home</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3>Provide a quote by {{author.name}}:</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"border border-dark col-sm-9\\\">\\n      <br>\\n      <form (submit)=\\\"createQuote()\\\">\\n        <h3>Quote: </h3>\\n        <input class=\\\"form-control col-sm-10\\\" required minlength=\\\"4\\\" name=\\\"newquote.quote\\\" [(ngModel)]=\\\"newquote.quote\\\"><br>\\n        <button class=\\\"col-4 btn btn-danger btn-lg\\\" routerLink=\\\"/quotes/{{paramId}}\\\">Cancel</button>\\n        <button class=\\\"col-4 btn btn-success btn-lg\\\" type=\\\"submit\\\">Submit</button>\\n      </form><br>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-add-quote',\n  templateUrl: './add-quote.component.html',\n  styleUrls: ['./add-quote.component.css']\n})\nexport class AddQuoteComponent implements OnInit {\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  paramId: any;\n  newquote = {quote: \"\", vote: 0};\n  author: any;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=>{\n      this.paramId = params['id'];\n      console.log(params['id']);\n    })\n    this.getAuthorFromService();\n  }\n  getAuthorFromService(){\n    let observable = this._httpService.getAuthor(this.paramId);\n    observable.subscribe(data => {\n      console.log(\"Data\", data);\n      this.author = data['quotes'];\n      console.log(this.author);\n    })\n  }\n  createQuote(){\n    console.log(this.newquote)\n    let observable = this._httpService.createQuote(this.newquote, this.paramId);\n    observable.subscribe(data => {\n      console.log(\"Data\", data);\n      console.log(\"Any Errors\", data['error']);\n      this.redirectAuthorQuotes();\n    })\n  }\n  redirectAuthorQuotes(){\n    this._router.navigate(['/quotes/'+ this.paramId])\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddQuoteComponent } from './add-quote/add-quote.component';\nimport { AddAuthorComponent } from './add-author/add-author.component';\nimport { AuthorQuotesComponent } from './author-quotes/author-quotes.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path: \"\", component: AuthorsComponent},\n  {path: \"new\", component: AddAuthorComponent},\n  {path: \"quotes/:id\", component: AuthorQuotesComponent},\n  {path: \"edit/:id\", component: EditAuthorComponent},\n  {path: \"write/:id\", component: AddQuoteComponent},\n  {path: \"**\", component: PageNotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h1>{{ title }}</h1>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Quote Ranks';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service'\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddQuoteComponent } from './add-quote/add-quote.component';\nimport { AddAuthorComponent } from './add-author/add-author.component';\nimport { AuthorQuotesComponent } from './author-quotes/author-quotes.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddQuoteComponent,\n    AddAuthorComponent,\n    AuthorQuotesComponent,\n    AuthorsComponent,\n    PageNotFoundComponent,\n    EditAuthorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"author\\\" class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <button class=\\\"btn btn-link\\\" routerLink=\\\"/\\\">Home</button>\\n      <span class=\\\"d-none d-sm-inline col-sm-4\\\"></span>\\n      <button class=\\\"btn btn-link col-3 col-sm-4\\\" routerLink='/write/{{paramId}}'>Add a quote</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3>Quotes by {{author.name}}:</h3>\\n    </div>\\n  </div>\\n  <table class=\\\"table table-striped table-hover table-bordered\\\">\\n    <thead>\\n      <th>Quotes</th>\\n      <th>Votes</th>\\n      <th>Actions available</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let q of author.quotes\\\">\\n        <td>\\\"{{q.quote}}\\\"</td>\\n        <td>{{q.votes}}</td>\\n        <td class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success col-sm-4 text-center\\\" (click)=\\\"voteUp(q, q._id)\\\">Vote Up</button>\\n          <button class=\\\"btn btn-warning col-sm-4 text-center\\\" (click)=\\\"voteDown(q, q._id)\\\">Vote down</button>\\n          <button class=\\\"btn btn-danger col-sm-4 text-center\\\" (click)=\\\"deleteQuote(q._id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-author-quotes',\n  templateUrl: './author-quotes.component.html',\n  styleUrls: ['./author-quotes.component.css']\n})\nexport class AuthorQuotesComponent implements OnInit {\n  constructor(\n    private _httpService: HttpService,\n    private _router:Router,\n    private _route:ActivatedRoute\n  ) { }\n  paramId: any;\n  author: any;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=>{\n    this.paramId = params['id'];\n    console.log(params['id']);\n    })\n    this.getQuotesFromService();\n  }\n  getQuotesFromService(){\n    let observable = this._httpService.getAuthor(this.paramId);\n    observable.subscribe(data=>{\n      console.log(\"Got Quotes\", data);\n      this.author = data['quotes'];\n    })\n  }\n  deleteQuote(quoteid){\n    let observable = this._httpService.deleteQuote(this.paramId, quoteid);\n    observable.subscribe(data=>{\n      console.log(\"Delete Data\",data);\n      console.log(\"Delete ERROR\", data['error']);\n      console.log(\"Delete ERROR\", data['err']);\n      this.getQuotesFromService();\n    })\n  }\n  // Work on Methods below\n  voteUp(quote, quoteid){\n    console.log(quote);\n    quote.votes++;\n    console.log(quote.votes);\n    let observable = this._httpService.updateVote(this.paramId, quoteid, quote);\n    observable.subscribe(data=>{\n      console.log(\"Any Errors\", data['error']);\n      console.log(\"Any Errors\", data['err']);\n    })\n  }\n  voteDown(quote, quoteid){\n    console.log(quote.votes);\n    quote.votes--;\n    console.log(quote.votes);\n    let observable = this._httpService.updateVote(this.paramId, quoteid, quote);\n    observable.subscribe(data=>{\n      console.log(\"Any Errors\", data['error']);\n      console.log(\"Any Errors\", data['err']);\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-lg btn-link\\\" routerLink =\\\"new\\\">Add a quotable author</button>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3>We have quotes by:</h3>\\n    </div>\\n  </div>\\n  <table class=\\\"table table-striped table-hover table-bordered\\\">\\n    <thead>\\n      <th class=\\\"h3\\\">Author</th>\\n      <th class=\\\"h3\\\">Actions available</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let a of authors\\\">\\n        <td >{{a.name}}</td>\\n        <td class=\\\"text-center h4\\\">\\n          <button class=\\\"btn btn-primary col-sm-5\\\" routerLink=\\\"quotes/{{a._id}}\\\">View Quotes</button>\\n          <span class=\\\"d-none d-sm-inline col-sm-1\\\"></span>\\n          <button class=\\\"btn btn-dark col-sm-5\\\" routerLink=\\\"edit/{{a._id}}\\\">Edit</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\nexport class AuthorsComponent implements OnInit {\n  authors: any[];\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router\n) { }\n\n  ngOnInit() {\n    this.getAuthorsFromService();\n  }\n  getAuthorsFromService(){\n    let observable = this._httpService.getAuthors();\n    observable.subscribe(data=>{\n      console.log(\"Authors Data\", data);\n      this.authors = data['authors'];\n    })\n  }\n  redirectCreateAuthor(){\n    this._router.navigate(['/new']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"author\\\" class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <button class=\\\"btn btn-link\\\" routerLink='/'>Home</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3>Edit Author: {{authorname}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"border border-dark col-sm-9\\\">\\n      <br>\\n      <form (submit)=\\\"editAuthor()\\\">\\n        <h3>Name: </h3>\\n        <input class=\\\"form-control col-sm-10\\\" required minlength=\\\"4\\\" name=\\\"author.name\\\" [(ngModel)]=\\\"author.name\\\"><br>\\n        <button class=\\\"col-4 btn btn-danger btn-lg\\\" routerLink=\\\"/\\\">Cancel</button>\\n        <button class=\\\"col-4 btn btn-success btn-lg\\\" type=\\\"submit\\\">Submit</button>\\n      </form><br>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-edit-author',\n  templateUrl: './edit-author.component.html',\n  styleUrls: ['./edit-author.component.css']\n})\nexport class EditAuthorComponent implements OnInit {\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  author: any;\n  authorname: any;\n  paramId: any;\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=>{\n      this.paramId = params['id'];\n      console.log(params['id']);\n      })\n    this.getAuthorFromService();\n  }\n  getAuthorFromService(){\n    let observable = this._httpService.getAuthor(this.paramId);\n    observable.subscribe(data=>{\n      console.log(\"AuthorData\", data);\n      this.authorname = data['quotes']['name'];\n      this.author = data['quotes'];\n\n      console.log(this.author);\n    })\n  }\n  editAuthor(){\n    // this.author.name = this.newauthor.name;\n    let observable = this._httpService.updateAuthor(this.paramId, this.author);\n    observable.subscribe(data=>{\n      console.log(\"Data Edit\", data);\n    })\n    this.redirectHome();\n  }\n  redirectHome(){\n    this._router.navigate(['/']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  getAuthors(){\n    return this._http.get('/authors')\n  }\n  getAuthor(id){\n    return this._http.get('/author/' + id)\n  }\n  createAuthor(newAuthor){\n    console.log(newAuthor);\n    return this._http.post('/author', newAuthor)\n  }\n  createQuote(author, id){\n    return this._http.put('/quote/'+ id, author)\n  }\n  updateAuthor(id, author){\n    return this._http.put('/author/edit/'+ id, author)\n  }\n  updateVote(id, quoteid, quote){\n    return this._http.put(\"/vote/\"+ id + \"/\" + quoteid, quote)\n  }\n  deleteQuote(id, quoteid){\n    console.log(id, quoteid)\n    return this._http.delete('/quote/'+ id + '/'+ quoteid);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h1>Page Not Found</h1>\\n      <button class=\\\"btn btn-success\\\" routerLink = \\\"/\\\">Home</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}